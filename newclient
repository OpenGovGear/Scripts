#!/usr/bin/env bash

#this script should be run once on a staging server to set up
#an onboarding client. Once onboarding of the client is done
#and moved to the production server the instance should be removed
#because this script is not set up to run a second time (could be if needed)
#the main purpose of this script is to customize the configuration 
#file, initialize the database catalogue, external file store and 
#plug-ins. Although the production environment will have an external 
#database server, for development purpose that shouldn't be necessary
#just use the local postgres, then dump it and load onto prod using
#git. After work is done on this server, use loadclient script to
#create production.ini file, dump db, and move everything to GIT

#Mount external filestore
echo "Enter the three letter volume identifier(n if you don't know):"
read volID

if [${volID} = "n" ] #give user an out if they don't have the dev id
then
	echo 'Run sudo fdisk -l to view attached devices'
	exit 1
fi

#Check whether we're using a volume copied from prod
#that doesn't need formatting
echo "Does the volume require formatting(y/n)?"
read reqfrmt
if [${reqfrmt} = "y" ]
then
	sudo mkfs -t ext4 /dev/${volID}
	echo 'Formatting device $volID as ext4'
fi

#mount the volume
sudo mkdir /FSTORE
sudo mount /dev/${volID} /FSTORE

#Get all required details about this deployment
echo "Enter client organization's name:"
read orgName

echo "Enter this machine's floating ip address:"
read hostIP

echo "Enter the database servers subnet ip address:"
read dbserv

#create this client's directory trees from default
sudo cp -r /etc/ckan/default /etc/ckan/${orgName}
sudo cp -r /usr/lib/ckan/default /usr/lib/ckan/${orgName}
sudo ln -s /usr/lib/ckan/${orgName}/src/ckan/who.ini /etc/ckan/${orgName}/who.ini
sudo ln -s /usr/lib/ckan/${orgName}/src/ckan/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml #TO-DO maybe change this to work with multicore solr

#customize development.ini configuration
cd /etc/ckan/${orgName}
sed -i s/ckan_default/${orgName}/ development.ini #user for postgres connection
sed -i s/pass/capstone/ development.ini #password for postgres connection
sed -i s/ckan_default/${orgName}_ctlg/ development.ini #table schema
#sudo sed -i s/ckan\.site_url=/ckan\.site_url = http:\/\/${hostIP}/ development.ini #this command doesn't work
sudo sed -i s/CKAN/${orgName}/ development.ini #site_title wish we could make it all caps or capinit
sudo sed -i 's/#solr_url/solr_url/' /etc/ckan/default/development.ini #activate solr
sudo sed -i 's/#ckan\.storage_path/ckan\.storage_path/' development.ini #activate file store
sudo sed -i s_/var/lib/ckan_/var/lib/ckan/${orgName}_ development.ini #set file store location

#initialise file store
sudo mkdir -p /FSTORE/${orgName}
sudo chown `whoami` /FSTORE/${orgName} #paster runs under the id of 
					#whatever user started it
sudo chmod u+rwx /FSTORE/${orgName} #because the user guide says so

#enable CKAN solr search platform on jetty and start
sudo mv /etc/solr/conf/schema.xml /etc/solr/conf/schema.xml.bak
sudo ln -s /usr/lib/ckan/default/src/ckan/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
sudo service jetty start

#create client database user, password and schema and initialise db
sudo -u postgres createuser -S -D -R ${orgName}
sudo -u postgres psql -U postgres -d postgres -c "alter user ${orgName} with password 'capstone';"
sudo -u postgres createdb -O ${orgName} ${orgName}_ctlg -E utf-8
cd /usr/lib/ckan/${orgName}/src/ckan
. /usr/lib/ckan/default/bin/activate
paster db init -c /etc/ckan/${orgName}/development.ini
paster serve /etc/ckan/${orgName}/development.ini


